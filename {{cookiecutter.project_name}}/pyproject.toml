[project]
name = "{{cookiecutter.project_name}}"
version = "0.0.1"
description = "{{cookiecutter.project_description}}"
authors = [{ name = "{{cookiecutter.author}}", email = "{{cookiecutter.email}}" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.9,<4.0"
dependencies = []

[project.urls]
Repository = "https://github.com/{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}"
{% if cookiecutter.mkdocs == 'y' -%}
Documentation = "https://{{cookiecutter.author_github_handle}}.github.io/{{cookiecutter.project_name}}/"
{% endif -%}

[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = ["{{cookiecutter.project_slug}}"]

[tool.uv]
python-preference = "system"
package = true
default-groups = ["dev"]

[dependency-groups]
dev = [
    "pytest~=8.3.3",
    "pytest_mock~=3.14.0",
    {% if cookiecutter.codecov == 'y' -%}
    "pytest-cov~=6.0.0",
    {% endif -%}
    {% if cookiecutter.tox == 'y' -%}
    "tox-uv~=1.16.0",
    {% endif -%}
    "mypy~=1.13.0",
    "pre-commit~=4.0.0",
    "ruff~=0.8.0",
    "black~=24.10.0"
]
{% if cookiecutter.mkdocs == 'y' -%}
docs = [
    "mkdocs~=1.6.0",
    "mkdocs-material~=9.5.0",
    "mkdocstrings[python]~=1.12.0",
    "mkdocs-gen-files~=0.5.0",
    "mkdocs-literate-nav~=0.6.1",
    "mkdocs-section-index~=0.3.8",
    "docformatter~=1.7.5"
]
{%- endif %}


{% if cookiecutter.mkdocs == 'y' -%}
[tool.docformatter]
recursive = true
wrap-summaries = 88
wrap-descriptions = 88
black = true
newlinestyle = "google"
make-summary-multi-line = true
pre-summary-newline = true
force-wrap = false
{%- endif %}

[tool.mypy]
files = ["{{cookiecutter.project_slug}}"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
filterwarnings = ["ignore::DeprecationWarning"]

[tool.ruff]
target-version = "py{{ cookiecutter.target_python_version.replace('.', '') }}"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Unspecified Import Names
    "F403",
    # long messages
    "TRY003",
    # Possible SQL injection vector through string-based query construction
    "S608",
    # Zip without explicit strict
    "B905"
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101", # asserts allowed in tests...
]

{% if cookiecutter.codecov == "y"-%}
[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.project_slug}}"]
{%- endif%}

[tool.black]
line-length = 88
target-version = ['py{{ cookiecutter.target_python_version.replace('.', '') }}']
preview = true
